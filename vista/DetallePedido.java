/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DetallePedido.java
 *
 * Created on 05-ago-2013, 15:34:36
 */
package vista;

import conexion.Operaciones;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.geom.Arc2D;
import java.sql.Time;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;
import objetos.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
/**
 *
 * @author juanki
 */
public class DetallePedido extends javax.swing.JPanel {

    private Time hora=new Time(0, 0, 0);
    private Boolean nuevoPedido=true;
    private Boolean edicion=false;
    private JLabel fondo=new JLabel(new ImageIcon("imagenes/fondo.jpg"));
 
    private double costoLente=0;
    private double costoMontura=0;
    private double costoConsulta=0;
    private double costoDescuento=0;
    private double costoACuenta=0;
    private double costoTotal=0;
    private double costoSaldo=0;
    private double costoGafa=0;
    private double totalAPagar=0;
    
    private Persona persona=new Persona();
    private Pedido pedido=new Pedido();
    private Montura montura=new Montura();
    private Gafa gafa=new Gafa();
    private Lente lente=new Lente();
    private Pago pago=new Pago();
    private ACuenta aCuenta;
    
    private Usuario usuario;
    private pedido panelPedido;
    private String estadoPedido="pendiente";
    private Operaciones operaciones=new Operaciones();
    private Ventaja_pedido ventana;
    public DetallePedido(Usuario usuario,pedido pedid,boolean edicion,Ventaja_pedido ventana) {
        initComponents();
        //iniciarAutoCompletes();
        //setnombresComponentes();
        this.usuario=usuario;
        this.panelPedido=pedid;
        this.edicion=edicion;
        this.ventana=ventana;
        valoresPorDefecto();
    }
    public void editarPedido(){
        ocultarNoEditables();
        llenarDatosPedidoEditables();
        mostrarEditables(true);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelMarcaMontura = new javax.swing.JLabel();
        labelModeloMontura = new javax.swing.JLabel();
        labelColorMontura = new javax.swing.JLabel();
        labelTamanioMontura = new javax.swing.JLabel();
        marca_montura = new javax.swing.JComboBox();
        tamanio_montura = new javax.swing.JComboBox();
        color_montura = new javax.swing.JComboBox();
        modeloMontura = new javax.swing.JComboBox();
        monturaGafa = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        labelMaterialLente = new javax.swing.JLabel();
        labelTipoLente = new javax.swing.JLabel();
        labelColorLente = new javax.swing.JLabel();
        labelVisionLente = new javax.swing.JLabel();
        vision_lente = new javax.swing.JComboBox();
        color_lente = new javax.swing.JComboBox();
        tipo_lente = new javax.swing.JComboBox();
        material_lente = new javax.swing.JComboBox();
        panelPago = new javax.swing.JPanel();
        labelLente = new javax.swing.JLabel();
        labelArmazon = new javax.swing.JLabel();
        labelVarios = new javax.swing.JLabel();
        labelCostoTotal = new javax.swing.JLabel();
        labelDescuento = new javax.swing.JLabel();
        lente_pago = new javax.swing.JTextField();
        armazon = new javax.swing.JTextField();
        consulta = new javax.swing.JTextField();
        total_2 = new javax.swing.JTextField();
        descuento = new javax.swing.JTextField();
        labelTotal = new javax.swing.JLabel();
        total_a_pagar = new javax.swing.JTextField();
        labelACuenta = new javax.swing.JLabel();
        a_cuenta = new javax.swing.JTextField();
        labelSaldo = new javax.swing.JLabel();
        saldo = new javax.swing.JTextField();
        gafaLabel = new javax.swing.JLabel();
        gafaDeSol = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lDEsferico = new javax.swing.JTextField();
        lIEsferico = new javax.swing.JTextField();
        lICilindrico = new javax.swing.JTextField();
        lIEje = new javax.swing.JTextField();
        lDEje = new javax.swing.JTextField();
        lDCilindrico = new javax.swing.JTextField();
        labelEsferico = new javax.swing.JLabel();
        labelCilindrico = new javax.swing.JLabel();
        labelEje = new javax.swing.JLabel();
        labelDLejos = new javax.swing.JLabel();
        labelILejos = new javax.swing.JLabel();
        cDEsferico = new javax.swing.JTextField();
        cIEsferico = new javax.swing.JTextField();
        cICilindrico = new javax.swing.JTextField();
        cIEje = new javax.swing.JTextField();
        cDCilindrico = new javax.swing.JTextField();
        cDEje = new javax.swing.JTextField();
        labelDCerca = new javax.swing.JLabel();
        labelICerca = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        labelAudicion = new javax.swing.JLabel();
        labelAltura = new javax.swing.JLabel();
        labelDPLejos = new javax.swing.JLabel();
        labelDPCerca = new javax.swing.JLabel();
        audicion = new javax.swing.JTextField();
        altura = new javax.swing.JTextField();
        d_p_lejos = new javax.swing.JTextField();
        d_p_cerca = new javax.swing.JTextField();
        labelObservaciones = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observaciones = new javax.swing.JTextArea();
        fecha_ingreso = new com.toedter.calendar.JDateChooser();
        minuto_ini = new javax.swing.JComboBox();
        fecha_entrega = new com.toedter.calendar.JDateChooser();
        labelHoraEntrega = new javax.swing.JLabel();
        hora_ini = new javax.swing.JComboBox();
        l_dos_puntos = new javax.swing.JLabel();
        labelFechaEntrega = new javax.swing.JLabel();
        labelFechaIngreso = new javax.swing.JLabel();
        labelDoctor = new javax.swing.JLabel();
        doctor = new javax.swing.JComboBox();
        agregarPedido = new javax.swing.JButton();
        cancelarAgregarPedido = new javax.swing.JButton();
        guardarCambios = new javax.swing.JButton();
        pedidoEntregado = new javax.swing.JRadioButton();
        editarPedido = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MONTURA/ARMAZON", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelMarcaMontura.setText("Marca");
        jPanel1.add(labelMarcaMontura, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        labelModeloMontura.setText("Modelo");
        jPanel1.add(labelModeloMontura, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        labelColorMontura.setText("Color");
        jPanel1.add(labelColorMontura, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        labelTamanioMontura.setText("Tama√±o");
        jPanel1.add(labelTamanioMontura, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        marca_montura.setEditable(true);
        jPanel1.add(marca_montura, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 80, -1));

        tamanio_montura.setEditable(true);
        jPanel1.add(tamanio_montura, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 80, -1));

        color_montura.setEditable(true);
        jPanel1.add(color_montura, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 80, -1));

        modeloMontura.setEditable(true);
        jPanel1.add(modeloMontura, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 80, -1));

        monturaGafa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MONTURA", "GAFA DE SOL" }));
        monturaGafa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monturaGafaActionPerformed(evt);
            }
        });
        jPanel1.add(monturaGafa, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelMaterialLente.setText("Material");
        jPanel2.add(labelMaterialLente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        labelTipoLente.setText("Tipo");
        jPanel2.add(labelTipoLente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        labelColorLente.setText("Color");
        jPanel2.add(labelColorLente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        labelVisionLente.setText("Vision");
        jPanel2.add(labelVisionLente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        vision_lente.setEditable(true);
        jPanel2.add(vision_lente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 80, -1));

        color_lente.setEditable(true);
        jPanel2.add(color_lente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 80, -1));

        tipo_lente.setEditable(true);
        jPanel2.add(tipo_lente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 80, -1));

        material_lente.setEditable(true);
        jPanel2.add(material_lente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 80, -1));

        panelPago.setBackground(new java.awt.Color(255, 255, 255));
        panelPago.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PAGO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        panelPago.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelLente.setText("Lente");
        panelPago.add(labelLente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        labelArmazon.setText("Armazon");
        panelPago.add(labelArmazon, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        labelVarios.setText("Varios");
        panelPago.add(labelVarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 21));

        labelCostoTotal.setText("Costo Total");
        panelPago.add(labelCostoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, -1, -1));

        labelDescuento.setText("Descuento");
        panelPago.add(labelDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        lente_pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lente_pagoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lente_pagoKeyTyped(evt);
            }
        });
        panelPago.add(lente_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 71, -1));

        armazon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                armazonKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                armazonKeyTyped(evt);
            }
        });
        panelPago.add(armazon, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 71, -1));

        consulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                consultaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                consultaKeyTyped(evt);
            }
        });
        panelPago.add(consulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 71, -1));

        total_2.setEditable(false);
        total_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                total_2KeyTyped(evt);
            }
        });
        panelPago.add(total_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 71, -1));

        descuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descuentoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descuentoKeyTyped(evt);
            }
        });
        panelPago.add(descuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 72, -1));

        labelTotal.setText("Total");
        panelPago.add(labelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, -1, -1));

        total_a_pagar.setEditable(false);
        total_a_pagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                total_a_pagarKeyTyped(evt);
            }
        });
        panelPago.add(total_a_pagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 70, -1));

        labelACuenta.setText("Acuenta");
        panelPago.add(labelACuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        a_cuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a_cuentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_cuentaKeyTyped(evt);
            }
        });
        panelPago.add(a_cuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 70, -1));

        labelSaldo.setText("Saldo");
        panelPago.add(labelSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, -1, -1));

        saldo.setEditable(false);
        saldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                saldoKeyTyped(evt);
            }
        });
        panelPago.add(saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 70, -1));

        gafaLabel.setText("Gafa");
        panelPago.add(gafaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        gafaDeSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gafaDeSolActionPerformed(evt);
            }
        });
        panelPago.add(gafaDeSol, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 70, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SIN NOMBRE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel6.add(lDEsferico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 59, -1));
        jPanel6.add(lIEsferico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 59, -1));
        jPanel6.add(lICilindrico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 59, -1));
        jPanel6.add(lIEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 59, -1));
        jPanel6.add(lDEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 59, -1));
        jPanel6.add(lDCilindrico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 59, -1));

        labelEsferico.setText("Esferico");
        jPanel6.add(labelEsferico, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        labelCilindrico.setText("Cilindrico");
        jPanel6.add(labelCilindrico, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));

        labelEje.setText("Eje");
        jPanel6.add(labelEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        labelDLejos.setText("D");
        jPanel6.add(labelDLejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        labelILejos.setText("I");
        jPanel6.add(labelILejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));
        jPanel6.add(cDEsferico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 59, -1));
        jPanel6.add(cIEsferico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 59, -1));
        jPanel6.add(cICilindrico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 59, -1));
        jPanel6.add(cIEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 59, -1));
        jPanel6.add(cDCilindrico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 59, -1));
        jPanel6.add(cDEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 59, -1));

        labelDCerca.setText("D");
        jPanel6.add(labelDCerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        labelICerca.setText("I");
        jPanel6.add(labelICerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, -1));

        jLabel38.setText("Lejos");
        jPanel6.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        jLabel39.setText("Cerca");
        jPanel6.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SIN NOMBRE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PAGO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hobo Std", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 380, 180));

        labelAudicion.setText("AUDICION");
        jPanel4.add(labelAudicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        labelAltura.setText("ALTURA");
        jPanel4.add(labelAltura, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        labelDPLejos.setText("D. P. LEJOS");
        jPanel4.add(labelDPLejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        labelDPCerca.setText("D. P. CERCA");
        jPanel4.add(labelDPCerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, -1));
        jPanel4.add(audicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 60, -1));
        jPanel4.add(altura, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 62, -1));
        jPanel4.add(d_p_lejos, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 60, -1));
        jPanel4.add(d_p_cerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 61, -1));

        labelObservaciones.setText("Oservaciones");
        jPanel4.add(labelObservaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        observaciones.setColumns(20);
        observaciones.setRows(5);
        jScrollPane1.setViewportView(observaciones);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 268, 70));

        fecha_ingreso.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fecha_ingreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fecha_ingresoKeyTyped(evt);
            }
        });

        minuto_ini.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        labelHoraEntrega.setText("Hora Entrega");

        hora_ini.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        l_dos_puntos.setText(":");

        labelFechaEntrega.setText("Fecha Entrega");

        labelFechaIngreso.setText("Fecha Ingreso");

        labelDoctor.setText("Doctor");

        doctor.setEditable(true);

        agregarPedido.setText("Agregar");
        agregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPedidoActionPerformed(evt);
            }
        });
        agregarPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                agregarPedidoKeyPressed(evt);
            }
        });

        cancelarAgregarPedido.setText("Cancelar");
        cancelarAgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAgregarPedidoActionPerformed(evt);
            }
        });
        cancelarAgregarPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelarAgregarPedidoKeyPressed(evt);
            }
        });

        guardarCambios.setText("Guardar Cambios");
        guardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCambiosActionPerformed(evt);
            }
        });
        guardarCambios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guardarCambiosKeyPressed(evt);
            }
        });

        pedidoEntregado.setText("Pedido Entregado");

        editarPedido.setText("Editar Pedido");
        editarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarPedidoActionPerformed(evt);
            }
        });
        editarPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editarPedidoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelFechaIngreso)
                                .addGap(10, 10, 10)
                                .addComponent(fecha_ingreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(labelFechaEntrega)
                                .addGap(10, 10, 10)
                                .addComponent(fecha_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelHoraEntrega)
                        .addGap(10, 10, 10)
                        .addComponent(hora_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(l_dos_puntos)
                        .addGap(6, 6, 6)
                        .addComponent(minuto_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDoctor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pedidoEntregado)
                                .addGap(72, 72, 72)
                                .addComponent(editarPedido)
                                .addGap(5, 5, 5)
                                .addComponent(agregarPedido)
                                .addGap(9, 9, 9)
                                .addComponent(guardarCambios)
                                .addGap(5, 5, 5)
                                .addComponent(cancelarAgregarPedido))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(panelPago, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFechaIngreso)
                    .addComponent(labelDoctor)
                    .addComponent(fecha_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFechaEntrega)
                    .addComponent(fecha_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHoraEntrega)
                    .addComponent(hora_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_dos_puntos)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minuto_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPago, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editarPedido)
                        .addComponent(pedidoEntregado))
                    .addComponent(agregarPedido)
                    .addComponent(guardarCambios)
                    .addComponent(cancelarAgregarPedido)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fecha_ingresoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha_ingresoKeyTyped
        fecha_entrega.setMinSelectableDate(fecha_ingreso.getDate());
}//GEN-LAST:event_fecha_ingresoKeyTyped

    private void agregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPedidoActionPerformed
        crearObjetos();
    }//GEN-LAST:event_agregarPedidoActionPerformed

    private void guardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCambiosActionPerformed
        guardarCambios();
    }//GEN-LAST:event_guardarCambiosActionPerformed

    private void cancelarAgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAgregarPedidoActionPerformed
        cancelarAgregar();
        panelPedido.setIdPedido(0);
    }//GEN-LAST:event_cancelarAgregarPedidoActionPerformed

    private void agregarPedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agregarPedidoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            crearObjetos();
        }
                    
    }//GEN-LAST:event_agregarPedidoKeyPressed

    private void guardarCambiosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guardarCambiosKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER)
        guardarCambios();
    }//GEN-LAST:event_guardarCambiosKeyPressed

    private void cancelarAgregarPedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelarAgregarPedidoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER)
        cancelarAgregar();
    }//GEN-LAST:event_cancelarAgregarPedidoKeyPressed

    private void editarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarPedidoActionPerformed
        editarPedido();
    }//GEN-LAST:event_editarPedidoActionPerformed

    private void monturaGafaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monturaGafaActionPerformed
        
        inciarAutoCompletesMontura();
    }//GEN-LAST:event_monturaGafaActionPerformed

    private void saldoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saldoKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_saldoKeyTyped

    private void a_cuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_cuentaKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_a_cuentaKeyTyped

    private void a_cuentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_cuentaKeyReleased
        //calcularTotalAPagar();
}//GEN-LAST:event_a_cuentaKeyReleased

    private void total_a_pagarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_total_a_pagarKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_total_a_pagarKeyTyped

    private void descuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descuentoKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_descuentoKeyTyped

    private void descuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descuentoKeyReleased
        //calcularTotalAPagar();
}//GEN-LAST:event_descuentoKeyReleased

    private void total_2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_total_2KeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_total_2KeyTyped

    private void consultaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultaKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_consultaKeyTyped

    private void consultaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultaKeyReleased
        //calcularTotalAPagar();
}//GEN-LAST:event_consultaKeyReleased

    private void armazonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_armazonKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_armazonKeyTyped

    private void armazonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_armazonKeyReleased
        //calcularTotalAPagar();
}//GEN-LAST:event_armazonKeyReleased

    private void lente_pagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lente_pagoKeyTyped
        //calcularTotalAPagar();
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
}//GEN-LAST:event_lente_pagoKeyTyped

    private void lente_pagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lente_pagoKeyReleased
        //calcularTotalAPagar();
}//GEN-LAST:event_lente_pagoKeyReleased

    private void editarPedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editarPedidoKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER)
        editarPedido();
    }//GEN-LAST:event_editarPedidoKeyPressed

    private void gafaDeSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gafaDeSolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gafaDeSolActionPerformed
    
    private void calcularTotalAPagar(){
        if(!lente_pago.getText().equals(""))
             costoLente=Double.parseDouble(lente_pago.getText());
        if(!armazon.getText().equals(""))
             costoMontura=Double.parseDouble(armazon.getText());
        if(!consulta.getText().equals(""))
            costoConsulta=Double.parseDouble(consulta.getText());
        if(!descuento.getText().equals(""))
            costoDescuento=Double.parseDouble(descuento.getText());
        if(!a_cuenta.getText().equals(""))
            costoACuenta= Double.parseDouble(a_cuenta.getText());
        if(!gafaDeSol.getText().equals(""))
            costoGafa= Double.parseDouble(gafaDeSol.getText());
        costoTotal=costoLente+costoMontura+costoConsulta+costoGafa;
        total_2.setText(Double.toString(costoTotal));
        totalAPagar=costoTotal-costoDescuento;
        total_a_pagar.setText(Double.toString(totalAPagar));
        costoSaldo=totalAPagar-costoACuenta;
        saldo.setText(Double.toString(costoSaldo));
    }
    
    public void setIdPedido(int idPedido){
        pedido=new Pedido(idPedido);
        
    }
    public void agregarPedido(){
        if(validar()){
            panelPedido.agregarATablaPedidos();
            panelPedido.enableBotonAdd();
        
        }
        
    }
    public void guardarCambios(){
        if(validar()){
            guardarPedido();
            panelPedido.actualizarTablas();
           //panelPedido.cerrarDetallePedido();
            mostrarEditables(false);
            mostrarNoEditables();
            llenarBifocales();
        }
    }
    public int getIdPedido(){
        return pedido.getId();
    }
    public void cerrarVentana(){
        panelPedido.cerrarVentanaPedido();
    }
    public void cancelarAgregar(){
        panelPedido.cancelarPedido();
    }
  
  public void iniciarAutoCompletes(){
        
        marca_montura.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,marca_montura);
            }
        });
        modeloMontura.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,modeloMontura);
            }
        });
        color_montura.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,color_montura);
            }
        });
        
        tamanio_montura.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,tamanio_montura);
            }
        });
        material_lente.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,material_lente);
            }
        });
        tipo_lente.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,tipo_lente);
            }
        });
        color_lente.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,color_lente);
            }
        });
        vision_lente.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
           @Override
            public void keyReleased(KeyEvent evt) {
               autocompletar(evt,vision_lente);
            }
        });
    }
  public void autocompletar(KeyEvent evt,JComboBox combo)
    {
         String cadenaEscrita = combo.getEditor().getItem().toString();

               if(cadenaEscrita.length()>5){
                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {
                    listarNombres(combo,cadenaEscrita);
                    
                    if (combo.getItemCount() > 0) {
                        combo.showPopup();
                        if (evt.getKeyCode() != 8) {
                            ((JTextComponent) combo.getEditor().getEditorComponent()).select(cadenaEscrita.length(), combo.getEditor().getItem().toString().length());

                        }else{
                            combo.getEditor().setItem(cadenaEscrita);
                        }

                    } else {

                        combo.addItem(cadenaEscrita);
                    }
                }
               }
    }
  public boolean validar(){
        boolean exito=false;
        validarHora(); 
        if(validarFechas())
            //if(validarPago())   
                exito=true;
    return exito;
  }
 
    public void guardarPedido(){
        if(edicion){
           actualizarPedido();
       }else{
          // guardarObjetos();
       }
    }
    public void crearObjetos(){
        if(validar())
        crearObjetoPedido();
        if(monturaGafa.getSelectedItem().equals("MONTURA"))
            crearObjetoMontura();
        else
            crearObjetoGafa();
        crearObjetoLente();
        mostrarVentanaPago();
    }
    public void setPago(Pago pago)
    {
        this.pago=pago;
    }
    public void setACuenta(ACuenta aCuenta){
        this.aCuenta=aCuenta;
    }
  
    public void guardarPedidoEnBD(){
        pedido.guardarEnBD();
    }
    public void mostrarVentanaPago(){
        DetallePago dtp=new DetallePago(ventana, true,this);
        dtp.setPedido(pedido);
        dtp.setUsuario(usuario);
        dtp.setMontura(montura);
        dtp.setGafa(gafa);
        dtp.setLente(lente);
        dtp.setCliente(persona);
        dtp.llenarDatos();
        dtp.setVisible(true);
    }
    public Montura crearObjetoMontura(){
       montura=new Montura(""+marca_montura.getSelectedItem(),""+modeloMontura.getSelectedItem(),
                                     getString(tamanio_montura),getString(color_montura),""+monturaGafa.getSelectedItem());
     return montura;
    }
    public Gafa crearObjetoGafa(){
       gafa=new Gafa(""+marca_montura.getSelectedItem(),""+modeloMontura.getSelectedItem(),
                                     getString(tamanio_montura),getString(color_montura),""+monturaGafa.getSelectedItem());
     return gafa;
    }
    public Lente crearObjetoLente(){
        lente=new Lente(getString(material_lente),getString(tipo_lente),
                             getString(color_lente), getString(vision_lente));
        
        return lente;
    }
    public Persona getCliente(){
        return persona;
    }
    public Montura getMontura(){
        return montura;
    }
    public Pedido crearObjetoPedido(){
        pedido= new Pedido(fecha_ingreso.getDate(), fecha_entrega.getDate(),hora, lDEsferico.getText()
                                , lDCilindrico.getText(),lDEje.getText(), lIEsferico.getText(),lICilindrico.getText()
                                , lIEje.getText(),cDEsferico.getText(), cDCilindrico.getText(),cDEje.getText()
                                , cIEsferico.getText(),cICilindrico.getText(),cIEje.getText(), audicion.getText()
                                , altura.getText(), d_p_lejos.getText(),d_p_cerca.getText(), observaciones.getText()
                                , getEstadoPedido(),getString(doctor),persona.getId(),usuario.get_id());
        return pedido;
    }
    
    
    public String getEstadoPedido(){
       if(pedidoEntregado.isSelected())
            estadoPedido="entregado";
       else
           estadoPedido="pendiente";
       return estadoPedido;
    }
    public void setEstadoPedido(){
       if(pedido.getEstado().equals("entregado"))
           pedidoEntregado.setSelected(true);         
       else
           pedidoEntregado.setSelected(false);
       
    }
       public void validarHora(){
        int hora_=Integer.parseInt(""+hora_ini.getSelectedItem());
        int minuto=Integer.parseInt(""+minuto_ini.getSelectedItem());
        hora=new Time(hora_,minuto,0);
       
    }
    private String getString(JComboBox combo){
        String res="";
        if(combo.getEditor().getItem().toString()!=null)
            res=combo.getEditor().getItem().toString();
        return res;
    }
     public void actualizarPedido(){
        
        pedido.setAltura(altura.getText());
        pedido.setAudicion(audicion.getText());
        pedido.setDPCerca(d_p_cerca.getText());
        pedido.setDPLejos(d_p_lejos.getText());
        
        pedido.setDerCerCil(cDCilindrico.getText());
        pedido.setDerCerEje(cDEje.getText());
        pedido.setDerCerEsf(cDEsferico.getText());
        pedido.setDerLejCil(lDCilindrico.getText());
        pedido.setDerLejEje(lDEje.getText());
        pedido.setDerLejEsf(lDEsferico.getText());
        
        pedido.setIzqCerCil(cICilindrico.getText());
        pedido.setIzqCerEje(cIEje.getText());
        pedido.setIzqCerEsf(cIEsferico.getText());
        pedido.setIzqLejCil(lICilindrico.getText());
        pedido.setIzqLejEje(lIEje.getText());
        pedido.setIzqLejEsf(lIEsferico.getText());
        
        pedido.setDoctor(getString(doctor));
        pedido.setFechaEntrega(fecha_entrega.getDate());
        pedido.setFechaIngreso(fecha_ingreso.getDate());
        pedido.setHoraEntrega(hora);
        pedido.setObservaciones(observaciones.getText());
        pedido.setEstado(getEstadoPedido());
      
        lente.setColor(getString(color_lente));
        lente.setMaterial(getString(material_lente));
        lente.setTipo(getString(tipo_lente));
        lente.setVision(getString(vision_lente));
        
        montura.setModelo(getString(modeloMontura));
        montura.setColor(getString(color_montura));
        montura.setMarca(getString(marca_montura));
        montura.setTamanio(getString(tamanio_montura));
        
        
        pago.setMontoTotal(costoTotal);
        pago.setACuenta(costoACuenta,usuario.get_id());
        pago.setCostoArmazon(costoMontura);
        pago.setCostoConsulta(costoConsulta);
        pago.setCostoLente(costoLente);
        pago.setCostoGafa(costoGafa);
        pago.setDescuento(costoDescuento);
        
        pedido.actualizar();
        if(!montura.losDatosSonVacios())
            montura.actualizar();
        if(!lente.losDatosSonVacios())
            lente.actualizar();
        
        pago.actualizar();
        
    }
    public void setNuevoPedido(Boolean nuevoPedido){
        this.nuevoPedido=nuevoPedido;
    }
      private boolean validarFechas(){
        boolean validacion=false;
            try {
                    if(fecha_entrega.getDate().before(fecha_ingreso.getDate()))
                        JOptionPane.showMessageDialog(null, "no es posible entregar antes de la fecha de ingreso");
                    else
                        validacion=true;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "una de las fechas ingresadas no es valida");
                }
        
        
        return validacion;
    }
    public void setPedido(Pedido pedido){
        this.pedido=pedido;
        
    }
   public void llenarDatosPedidoEditables(){
        
        llenarBifocales();
        fecha_entrega.setDate(pedido.getFechaEntrega());
        fecha_ingreso.setDate(pedido.getFechaIngreso());
        hora_ini.setSelectedItem(pedido.getHoraEntrega().getHours());
        minuto_ini.setSelectedItem(pedido.getHoraEntrega().getMinutes());
        
        audicion.setText(pedido.getAudicion());
        altura.setText(pedido.getAltura());
        d_p_lejos.setText(pedido.getDPLejos());
        d_p_cerca.setText(pedido.getDPCerca());
        doctor.getEditor().setItem(pedido.getDoctor());
        
        llenarDatosPago();
        llenarDatosMontura();
        llenarDatosLente();
        
   }
   
   public void llenarDatosPago(){
        
        lente_pago.setText(""+pago.getCostoLente());
        armazon.setText(""+pago.getCostoArmazon());
        consulta.setText(""+pago.getCostoConsulta());
        total_2.setText(""+pago.getMontoTotal());
        descuento.setText(""+pago.getDescuento());
        a_cuenta.setText(""+pago.getACuenta());
        total_a_pagar.setText(""+(pago.getMontoTotal()-pago.getDescuento()));
        saldo.setText(""+((pago.getMontoTotal()-pago.getDescuento())-pago.getACuenta()));
    }
    public void llenarDatosLente(){
        
        material_lente.getEditor().setItem(lente.getMaterial());
        tipo_lente.getEditor().setItem(lente.getTipo());
        color_lente.getEditor().setItem(lente.getColor());
        vision_lente.getEditor().setItem(lente.getVision());
    }
    public void llenarDatosMontura(){
        
        marca_montura.getEditor().setItem(montura.getMarca());
        modeloMontura.getEditor().setItem(montura.getModelo());
        color_montura.getEditor().setItem(montura.getColor());
        
        tamanio_montura.getEditor().setItem(montura.getTamanio());
    }
  public void listarNombres(JComboBox combo,String cadenaEscrita){
        
        if(combo.getName().equals("apellido_cliente"))
             combo.setModel(persona.listaApellidos(cadenaEscrita));
        if(combo.getName().equals("nombre_cliente"))
             combo.setModel(persona.listaNombres(cadenaEscrita));
        if(combo.getName().equals("marca_montura"))
             combo.setModel(montura.listaMarcas(cadenaEscrita));
        if(combo.getName().equals("color_montura"))
             combo.setModel(montura.listaColores(cadenaEscrita));
        if(combo.getName().equals("modelo_montura"))
             combo.setModel(montura.listaModelos(cadenaEscrita));
        if(combo.getName().equals("tamanio_montura"))
             combo.setModel(montura.listaTamanios(cadenaEscrita));
        if(combo.getName().equals("material_lente"))
             combo.setModel(lente.listaMateriales(cadenaEscrita));
        if(combo.getName().equals("tipo_lente"))
             combo.setModel(lente.listaTipos(cadenaEscrita));
        if(combo.getName().equals("color_lente"))
             combo.setModel(lente.listaColores(cadenaEscrita));
        if(combo.getName().equals("vision_lente"))
             combo.setModel(lente.listaVisiones(cadenaEscrita));
        
    }
      public void setnombresComponentes(){
        
        //montura
        marca_montura.setName("marca_montura");
        modeloMontura.setName("modelo_montura");
        color_montura.setName("color_montura");
        
        tamanio_montura.setName("tamanio_montura");
        //lente
        material_lente.setName("material_lente");
        tipo_lente.setName("tipo_lente");
        color_lente.setName("color_lente");
        vision_lente.setName("vision_lente");
    }
      public void valoresPorDefecto(){
       if(!edicion){
          
        //fechas
        Date fechaActual=new Date();
        fecha_ingreso.setDate(fechaActual);
        fecha_entrega.setDate(fechaActual);
        //Hora
        hora_ini.setSelectedIndex(15);
        minuto_ini.setSelectedIndex(0);
        //autocompletes
        
        
        inciarAutoCompletesMontura();
        inciarAutoCompletesLente();
        //nombres de componentes
        
        //botonedicion false
        guardarCambios.setVisible(false);
        editarPedido.setVisible(false);
        //ocultamos panel PAGO
        panelPago.setVisible(false); 
       }else{
                     
       }
       add(fondo,new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0,1000, -1)); //fondo
    }
   public void inciarAutoCompletesMontura(){
       montura.setMontutaGafa(""+monturaGafa.getSelectedItem());
       marca_montura.setModel(montura.listaMarcas(""));
       modeloMontura.setModel(montura.listaModelos(""));
       tamanio_montura.setModel(montura.listaTamanios(""));
       color_montura.setModel(montura.listaColores(""));
       AutoCompleteDecorator.decorate(marca_montura);
       AutoCompleteDecorator.decorate(modeloMontura);
       AutoCompleteDecorator.decorate(tamanio_montura);
       AutoCompleteDecorator.decorate(color_montura);
   }
   public void inciarAutoCompletesLente(){
       
       material_lente.setModel(lente.listaMateriales(""));
       tipo_lente.setModel(lente.listaTipos(""));
       color_lente.setModel(lente.listaColores(""));
       vision_lente.setModel(lente.listaVisiones(""));
       AutoCompleteDecorator.decorate(material_lente);
       AutoCompleteDecorator.decorate(tipo_lente);
       AutoCompleteDecorator.decorate(color_lente);
       AutoCompleteDecorator.decorate(vision_lente);
   }
    public void valoresEdicion(){
        agregarPedido.setVisible(false);
        recuperarObjetosPedido();
        mostrarEditables(false);
        mostrarNoEditables();
        llenarBifocales();
        setEstadoPedido();
    }  
    public void recuperarObjetosPedido(){
        
        lente=new Lente(pedido.getId());
        montura=new Montura(pedido.getId());
        pago=new Pago(pedido.getId());
        
    }
    public void setCliente(Persona persona)
    {
        this.persona=persona;
    }
    
    public void ocultarNoEditables(){
        labelMarcaMontura.setText("Marca : " );
        labelModeloMontura.setText("Codigo :");
        labelColorMontura.setText("Color : ");
        
        labelTamanioMontura.setText("Tama√±io : ");
        
        labelMaterialLente.setText("Material :");
        labelTipoLente.setText("Tipo : ");
        labelColorLente.setText("Color : ");
        labelVisionLente.setText("Vision : ");
        
        labelLente.setText("Lente : ");
        labelArmazon.setText("Armazon : ");
        labelVarios.setText("Varios : ");
        labelCostoTotal.setText("Costo Total : ");
        labelDescuento.setText("Descuento : ");
        labelTotal.setText("Total : ");
        labelACuenta.setText("A Cuenta : ");
        labelSaldo.setText("Saldo : ");
        
        labelAudicion.setText("Audicion :");
        labelAltura.setText("Altura :");
        labelDPLejos.setText("D.P.Lejos :");
        labelDPCerca.setText("D.P.Cerca :");
        
        labelDoctor.setText("Doctor :");
        labelFechaEntrega.setText("Fecha Entrega :");
        labelFechaIngreso.setText("Fecha Ingreso :");
        labelHoraEntrega.setText("Hora entrega:");
    }
   
            
    public void mostrarNoEditables(){
        labelFechaIngreso.setText("Fecha Ingreso : "+pedido.getStringFechaIngreso());
        labelFechaEntrega.setText("Fecha Entrega : "+pedido.getStringFechaEntrega());
        labelHoraEntrega.setText("Hora Entrega : "+pedido.getHoraEntrega());//.getHours()+":"+pedido.getHoraEntrega().getMinutes());
        labelDoctor.setText("Doctor : "+pedido.getDoctor());
        
        labelMarcaMontura.setText("Marca : "+montura.getMarca() );
        labelModeloMontura.setText("Codigo : "+montura.getModelo());
        labelColorMontura.setText("Color : "+montura.getColor());
        
        labelTamanioMontura.setText("Tama√±io : "+montura.getTamanio());
        
        labelMaterialLente.setText("Material :"+lente.getMaterial());
        labelTipoLente.setText("Tipo : "+lente.getTipo());
        labelColorLente.setText("Color : "+lente.getColor());
        labelVisionLente.setText("Vision : "+lente.getVision());
        
       
        
        labelLente.setText("Lente : "+pago.getCostoLente());
        labelArmazon.setText("Armazon : "+pago.getCostoArmazon());
        labelVarios.setText("Varios : "+pago.getCostoConsulta());
        labelCostoTotal.setText("Costo Total : "+pago.getMontoTotal());
        labelDescuento.setText("Descuento : "+pago.getDescuento());
        labelTotal.setText("Total : "+(pago.getMontoTotal()-pago.getDescuento()));
        labelACuenta.setText("A Cuenta : "+pago.getACuenta());
        labelSaldo.setText("Saldo : "+pago.getSaldo());
        
        labelAudicion.setText("Audicion :"+pedido.getAudicion());
        labelAltura.setText("Altura : "+pedido.getAltura());
        labelDPLejos.setText("D.P.Lejos : "+pedido.getDPLejos());
        labelDPCerca.setText("D.P.Cerca : "+pedido.getDPCerca());
        
        llenarBifocales();
    }
    public void llenarBifocales(){
        cDCilindrico.setText(pedido.getDerCerCil());
        cDEsferico.setText(pedido.getDerCerEsf());
        cDEje.setText(pedido.getDerCerEje());
        cICilindrico.setText(pedido.getIzqCerCil());
        cIEsferico.setText(pedido.getIzqCerEsf());
        cIEje.setText(pedido.getIzqCerEje());
        lDCilindrico.setText(pedido.getDerLejCil());
        lDEsferico.setText(pedido.getDerLejEsf());
        lDEje.setText(pedido.getDerLejEje());
        lICilindrico.setText(pedido.getIzqLejCil());
        lIEsferico.setText(pedido.getIzqLejEsf());
        lIEje.setText(pedido.getIzqLejEje());
        observaciones.setText(pedido.getObservaciones());
    }
    public void mostrarEditables(Boolean ocultar){
        fecha_ingreso.setVisible(ocultar);
        fecha_entrega.setVisible(ocultar);
        hora_ini.setVisible(ocultar);
        minuto_ini.setVisible(ocultar);
        doctor.setVisible(ocultar);
        
        marca_montura.setVisible(ocultar);
        modeloMontura.setVisible(ocultar);
        color_montura.setVisible(ocultar);
        
        tamanio_montura.setVisible(ocultar);
        
        material_lente.setVisible(ocultar);
        tipo_lente.setVisible(ocultar);
        color_lente.setVisible(ocultar);
        vision_lente.setVisible(ocultar);
        
                       
        lente_pago.setVisible(ocultar);
        armazon.setVisible(ocultar);
        consulta.setVisible(ocultar);
        total_2.setVisible(ocultar);
        total_a_pagar.setVisible(ocultar);
        a_cuenta.setVisible(ocultar);
        descuento.setVisible(ocultar);
        saldo.setVisible(ocultar);
        
        lDCilindrico.setEditable(ocultar);
        lDEje.setEditable(ocultar);
        lDEsferico.setEditable(ocultar);
        lICilindrico.setEditable(ocultar);
        lIEje.setEditable(ocultar);
        lIEsferico.setEditable(ocultar);
        cDCilindrico.setEditable(ocultar);
        cDEje.setEditable(ocultar);
        cDEsferico.setEditable(ocultar);
        cICilindrico.setEditable(ocultar);
        cIEje.setEditable(ocultar);
        cIEsferico.setEditable(ocultar);
        
       
        audicion.setVisible(ocultar);
        altura.setVisible(ocultar);
        d_p_lejos.setVisible(ocultar);
        d_p_cerca.setVisible(ocultar);
        observaciones.setEditable(ocultar);
        guardarCambios.setEnabled(ocultar);
        editarPedido.setEnabled(!ocultar);
        pedidoEntregado.setEnabled(ocultar);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a_cuenta;
    private javax.swing.JButton agregarPedido;
    private javax.swing.JTextField altura;
    private javax.swing.JTextField armazon;
    private javax.swing.JTextField audicion;
    private javax.swing.JTextField cDCilindrico;
    private javax.swing.JTextField cDEje;
    private javax.swing.JTextField cDEsferico;
    private javax.swing.JTextField cICilindrico;
    private javax.swing.JTextField cIEje;
    private javax.swing.JTextField cIEsferico;
    private javax.swing.JButton cancelarAgregarPedido;
    private javax.swing.JComboBox color_lente;
    private javax.swing.JComboBox color_montura;
    private javax.swing.JTextField consulta;
    private javax.swing.JTextField d_p_cerca;
    private javax.swing.JTextField d_p_lejos;
    private javax.swing.JTextField descuento;
    private javax.swing.JComboBox doctor;
    private javax.swing.JButton editarPedido;
    private com.toedter.calendar.JDateChooser fecha_entrega;
    private com.toedter.calendar.JDateChooser fecha_ingreso;
    private javax.swing.JTextField gafaDeSol;
    private javax.swing.JLabel gafaLabel;
    private javax.swing.JButton guardarCambios;
    private javax.swing.JComboBox hora_ini;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lDCilindrico;
    private javax.swing.JTextField lDEje;
    private javax.swing.JTextField lDEsferico;
    private javax.swing.JTextField lICilindrico;
    private javax.swing.JTextField lIEje;
    private javax.swing.JTextField lIEsferico;
    private javax.swing.JLabel l_dos_puntos;
    private javax.swing.JLabel labelACuenta;
    private javax.swing.JLabel labelAltura;
    private javax.swing.JLabel labelArmazon;
    private javax.swing.JLabel labelAudicion;
    private javax.swing.JLabel labelCilindrico;
    private javax.swing.JLabel labelColorLente;
    private javax.swing.JLabel labelColorMontura;
    private javax.swing.JLabel labelCostoTotal;
    private javax.swing.JLabel labelDCerca;
    private javax.swing.JLabel labelDLejos;
    private javax.swing.JLabel labelDPCerca;
    private javax.swing.JLabel labelDPLejos;
    private javax.swing.JLabel labelDescuento;
    private javax.swing.JLabel labelDoctor;
    private javax.swing.JLabel labelEje;
    private javax.swing.JLabel labelEsferico;
    private javax.swing.JLabel labelFechaEntrega;
    private javax.swing.JLabel labelFechaIngreso;
    private javax.swing.JLabel labelHoraEntrega;
    private javax.swing.JLabel labelICerca;
    private javax.swing.JLabel labelILejos;
    private javax.swing.JLabel labelLente;
    private javax.swing.JLabel labelMarcaMontura;
    private javax.swing.JLabel labelMaterialLente;
    private javax.swing.JLabel labelModeloMontura;
    private javax.swing.JLabel labelObservaciones;
    private javax.swing.JLabel labelSaldo;
    private javax.swing.JLabel labelTamanioMontura;
    private javax.swing.JLabel labelTipoLente;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelVarios;
    private javax.swing.JLabel labelVisionLente;
    private javax.swing.JTextField lente_pago;
    private javax.swing.JComboBox marca_montura;
    private javax.swing.JComboBox material_lente;
    private javax.swing.JComboBox minuto_ini;
    private javax.swing.JComboBox modeloMontura;
    private javax.swing.JComboBox monturaGafa;
    private javax.swing.JTextArea observaciones;
    private javax.swing.JPanel panelPago;
    private javax.swing.JRadioButton pedidoEntregado;
    private javax.swing.JTextField saldo;
    private javax.swing.JComboBox tamanio_montura;
    private javax.swing.JComboBox tipo_lente;
    private javax.swing.JTextField total_2;
    private javax.swing.JTextField total_a_pagar;
    private javax.swing.JComboBox vision_lente;
    // End of variables declaration//GEN-END:variables
}
